// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* NH_REQ_LOGIN_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NH_REQ_LOGIN_reflection_ = NULL;
const ::google::protobuf::Descriptor* HN_RET_LOGIN_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HN_RET_LOGIN_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Message_2eproto() {
  protobuf_AddDesc_Message_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Message.proto");
  GOOGLE_CHECK(file != NULL);
  NH_REQ_LOGIN_descriptor_ = file->message_type(0);
  static const int NH_REQ_LOGIN_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NH_REQ_LOGIN, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NH_REQ_LOGIN, validateinfo_),
  };
  NH_REQ_LOGIN_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NH_REQ_LOGIN_descriptor_,
      NH_REQ_LOGIN::default_instance_,
      NH_REQ_LOGIN_offsets_,
      -1,
      -1,
      -1,
      sizeof(NH_REQ_LOGIN),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NH_REQ_LOGIN, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NH_REQ_LOGIN, _is_default_instance_));
  HN_RET_LOGIN_descriptor_ = file->message_type(1);
  static const int HN_RET_LOGIN_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HN_RET_LOGIN, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HN_RET_LOGIN, result_),
  };
  HN_RET_LOGIN_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HN_RET_LOGIN_descriptor_,
      HN_RET_LOGIN::default_instance_,
      HN_RET_LOGIN_offsets_,
      -1,
      -1,
      -1,
      sizeof(HN_RET_LOGIN),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HN_RET_LOGIN, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HN_RET_LOGIN, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Message_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NH_REQ_LOGIN_descriptor_, &NH_REQ_LOGIN::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HN_RET_LOGIN_descriptor_, &HN_RET_LOGIN::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Message_2eproto() {
  delete NH_REQ_LOGIN::default_instance_;
  delete NH_REQ_LOGIN_reflection_;
  delete HN_RET_LOGIN::default_instance_;
  delete HN_RET_LOGIN_reflection_;
}

void protobuf_AddDesc_Message_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rMessage.proto\022\017google.protobuf\"5\n\014NH_R"
    "EQ_LOGIN\022\017\n\007account\030\001 \001(\t\022\024\n\014validateinf"
    "o\030\002 \001(\t\"/\n\014HN_RET_LOGIN\022\017\n\007account\030\001 \001(\t"
    "\022\016\n\006result\030\002 \001(\005b\006proto3", 144);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Message.proto", &protobuf_RegisterTypes);
  NH_REQ_LOGIN::default_instance_ = new NH_REQ_LOGIN();
  HN_RET_LOGIN::default_instance_ = new HN_RET_LOGIN();
  NH_REQ_LOGIN::default_instance_->InitAsDefaultInstance();
  HN_RET_LOGIN::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Message_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Message_2eproto {
  StaticDescriptorInitializer_Message_2eproto() {
    protobuf_AddDesc_Message_2eproto();
  }
} static_descriptor_initializer_Message_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NH_REQ_LOGIN::kAccountFieldNumber;
const int NH_REQ_LOGIN::kValidateinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NH_REQ_LOGIN::NH_REQ_LOGIN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.NH_REQ_LOGIN)
}

void NH_REQ_LOGIN::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NH_REQ_LOGIN::NH_REQ_LOGIN(const NH_REQ_LOGIN& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.NH_REQ_LOGIN)
}

void NH_REQ_LOGIN::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validateinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NH_REQ_LOGIN::~NH_REQ_LOGIN() {
  // @@protoc_insertion_point(destructor:google.protobuf.NH_REQ_LOGIN)
  SharedDtor();
}

void NH_REQ_LOGIN::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validateinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NH_REQ_LOGIN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NH_REQ_LOGIN::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NH_REQ_LOGIN_descriptor_;
}

const NH_REQ_LOGIN& NH_REQ_LOGIN::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

NH_REQ_LOGIN* NH_REQ_LOGIN::default_instance_ = NULL;

NH_REQ_LOGIN* NH_REQ_LOGIN::New(::google::protobuf::Arena* arena) const {
  NH_REQ_LOGIN* n = new NH_REQ_LOGIN;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NH_REQ_LOGIN::Clear() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validateinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool NH_REQ_LOGIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.NH_REQ_LOGIN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.NH_REQ_LOGIN.account"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_validateinfo;
        break;
      }

      // optional string validateinfo = 2;
      case 2: {
        if (tag == 18) {
         parse_validateinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_validateinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->validateinfo().data(), this->validateinfo().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.NH_REQ_LOGIN.validateinfo"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.NH_REQ_LOGIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.NH_REQ_LOGIN)
  return false;
#undef DO_
}

void NH_REQ_LOGIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.NH_REQ_LOGIN)
  // optional string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.NH_REQ_LOGIN.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string validateinfo = 2;
  if (this->validateinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validateinfo().data(), this->validateinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.NH_REQ_LOGIN.validateinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->validateinfo(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.protobuf.NH_REQ_LOGIN)
}

::google::protobuf::uint8* NH_REQ_LOGIN::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.NH_REQ_LOGIN)
  // optional string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.NH_REQ_LOGIN.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string validateinfo = 2;
  if (this->validateinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validateinfo().data(), this->validateinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.NH_REQ_LOGIN.validateinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->validateinfo(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.NH_REQ_LOGIN)
  return target;
}

int NH_REQ_LOGIN::ByteSize() const {
  int total_size = 0;

  // optional string account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // optional string validateinfo = 2;
  if (this->validateinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->validateinfo());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NH_REQ_LOGIN::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NH_REQ_LOGIN* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NH_REQ_LOGIN>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NH_REQ_LOGIN::MergeFrom(const NH_REQ_LOGIN& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.validateinfo().size() > 0) {

    validateinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validateinfo_);
  }
}

void NH_REQ_LOGIN::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NH_REQ_LOGIN::CopyFrom(const NH_REQ_LOGIN& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NH_REQ_LOGIN::IsInitialized() const {

  return true;
}

void NH_REQ_LOGIN::Swap(NH_REQ_LOGIN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NH_REQ_LOGIN::InternalSwap(NH_REQ_LOGIN* other) {
  account_.Swap(&other->account_);
  validateinfo_.Swap(&other->validateinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NH_REQ_LOGIN::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NH_REQ_LOGIN_descriptor_;
  metadata.reflection = NH_REQ_LOGIN_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NH_REQ_LOGIN

// optional string account = 1;
void NH_REQ_LOGIN::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NH_REQ_LOGIN::account() const {
  // @@protoc_insertion_point(field_get:google.protobuf.NH_REQ_LOGIN.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NH_REQ_LOGIN::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.NH_REQ_LOGIN.account)
}
 void NH_REQ_LOGIN::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.NH_REQ_LOGIN.account)
}
 void NH_REQ_LOGIN::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.NH_REQ_LOGIN.account)
}
 ::std::string* NH_REQ_LOGIN::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.NH_REQ_LOGIN.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NH_REQ_LOGIN::release_account() {
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NH_REQ_LOGIN::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.NH_REQ_LOGIN.account)
}

// optional string validateinfo = 2;
void NH_REQ_LOGIN::clear_validateinfo() {
  validateinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NH_REQ_LOGIN::validateinfo() const {
  // @@protoc_insertion_point(field_get:google.protobuf.NH_REQ_LOGIN.validateinfo)
  return validateinfo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NH_REQ_LOGIN::set_validateinfo(const ::std::string& value) {
  
  validateinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.NH_REQ_LOGIN.validateinfo)
}
 void NH_REQ_LOGIN::set_validateinfo(const char* value) {
  
  validateinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.NH_REQ_LOGIN.validateinfo)
}
 void NH_REQ_LOGIN::set_validateinfo(const char* value, size_t size) {
  
  validateinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.NH_REQ_LOGIN.validateinfo)
}
 ::std::string* NH_REQ_LOGIN::mutable_validateinfo() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.NH_REQ_LOGIN.validateinfo)
  return validateinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NH_REQ_LOGIN::release_validateinfo() {
  
  return validateinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NH_REQ_LOGIN::set_allocated_validateinfo(::std::string* validateinfo) {
  if (validateinfo != NULL) {
    
  } else {
    
  }
  validateinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), validateinfo);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.NH_REQ_LOGIN.validateinfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HN_RET_LOGIN::kAccountFieldNumber;
const int HN_RET_LOGIN::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HN_RET_LOGIN::HN_RET_LOGIN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.HN_RET_LOGIN)
}

void HN_RET_LOGIN::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HN_RET_LOGIN::HN_RET_LOGIN(const HN_RET_LOGIN& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.HN_RET_LOGIN)
}

void HN_RET_LOGIN::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

HN_RET_LOGIN::~HN_RET_LOGIN() {
  // @@protoc_insertion_point(destructor:google.protobuf.HN_RET_LOGIN)
  SharedDtor();
}

void HN_RET_LOGIN::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HN_RET_LOGIN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HN_RET_LOGIN::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HN_RET_LOGIN_descriptor_;
}

const HN_RET_LOGIN& HN_RET_LOGIN::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

HN_RET_LOGIN* HN_RET_LOGIN::default_instance_ = NULL;

HN_RET_LOGIN* HN_RET_LOGIN::New(::google::protobuf::Arena* arena) const {
  HN_RET_LOGIN* n = new HN_RET_LOGIN;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HN_RET_LOGIN::Clear() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

bool HN_RET_LOGIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.HN_RET_LOGIN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.HN_RET_LOGIN.account"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional int32 result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.HN_RET_LOGIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.HN_RET_LOGIN)
  return false;
#undef DO_
}

void HN_RET_LOGIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.HN_RET_LOGIN)
  // optional string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.HN_RET_LOGIN.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional int32 result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.protobuf.HN_RET_LOGIN)
}

::google::protobuf::uint8* HN_RET_LOGIN::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.HN_RET_LOGIN)
  // optional string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.HN_RET_LOGIN.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional int32 result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.HN_RET_LOGIN)
  return target;
}

int HN_RET_LOGIN::ByteSize() const {
  int total_size = 0;

  // optional string account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // optional int32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HN_RET_LOGIN::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HN_RET_LOGIN* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HN_RET_LOGIN>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HN_RET_LOGIN::MergeFrom(const HN_RET_LOGIN& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void HN_RET_LOGIN::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HN_RET_LOGIN::CopyFrom(const HN_RET_LOGIN& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HN_RET_LOGIN::IsInitialized() const {

  return true;
}

void HN_RET_LOGIN::Swap(HN_RET_LOGIN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HN_RET_LOGIN::InternalSwap(HN_RET_LOGIN* other) {
  account_.Swap(&other->account_);
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HN_RET_LOGIN::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HN_RET_LOGIN_descriptor_;
  metadata.reflection = HN_RET_LOGIN_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HN_RET_LOGIN

// optional string account = 1;
void HN_RET_LOGIN::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HN_RET_LOGIN::account() const {
  // @@protoc_insertion_point(field_get:google.protobuf.HN_RET_LOGIN.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HN_RET_LOGIN::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.HN_RET_LOGIN.account)
}
 void HN_RET_LOGIN::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.HN_RET_LOGIN.account)
}
 void HN_RET_LOGIN::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.HN_RET_LOGIN.account)
}
 ::std::string* HN_RET_LOGIN::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.HN_RET_LOGIN.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HN_RET_LOGIN::release_account() {
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HN_RET_LOGIN::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.HN_RET_LOGIN.account)
}

// optional int32 result = 2;
void HN_RET_LOGIN::clear_result() {
  result_ = 0;
}
 ::google::protobuf::int32 HN_RET_LOGIN::result() const {
  // @@protoc_insertion_point(field_get:google.protobuf.HN_RET_LOGIN.result)
  return result_;
}
 void HN_RET_LOGIN::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.HN_RET_LOGIN.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
