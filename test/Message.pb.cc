// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace protobuf {
class NH_REQ_LOGINDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NH_REQ_LOGIN> {
} _NH_REQ_LOGIN_default_instance_;
class HN_RET_LOGINDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HN_RET_LOGIN> {
} _HN_RET_LOGIN_default_instance_;

namespace protobuf_Message_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NH_REQ_LOGIN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NH_REQ_LOGIN, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NH_REQ_LOGIN, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NH_REQ_LOGIN, validateinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HN_RET_LOGIN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HN_RET_LOGIN, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HN_RET_LOGIN, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HN_RET_LOGIN, result_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(NH_REQ_LOGIN)},
  { 8, -1, sizeof(HN_RET_LOGIN)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_NH_REQ_LOGIN_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HN_RET_LOGIN_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _NH_REQ_LOGIN_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _HN_RET_LOGIN_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _NH_REQ_LOGIN_default_instance_.DefaultConstruct();
  _HN_RET_LOGIN_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rMessage.proto\022\017google.protobuf\"B\n\014NH_R"
      "EQ_LOGIN\022\013\n\003uid\030\001 \001(\r\022\017\n\007account\030\002 \001(\t\022\024"
      "\n\014validateinfo\030\003 \001(\t\"<\n\014HN_RET_LOGIN\022\013\n\003"
      "uid\030\001 \001(\r\022\017\n\007account\030\002 \001(\t\022\016\n\006result\030\003 \001"
      "(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 170);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Message.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Message_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NH_REQ_LOGIN::kUidFieldNumber;
const int NH_REQ_LOGIN::kAccountFieldNumber;
const int NH_REQ_LOGIN::kValidateinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NH_REQ_LOGIN::NH_REQ_LOGIN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.NH_REQ_LOGIN)
}
NH_REQ_LOGIN::NH_REQ_LOGIN(const NH_REQ_LOGIN& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  validateinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.validateinfo().size() > 0) {
    validateinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validateinfo_);
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:google.protobuf.NH_REQ_LOGIN)
}

void NH_REQ_LOGIN::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validateinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = 0u;
  _cached_size_ = 0;
}

NH_REQ_LOGIN::~NH_REQ_LOGIN() {
  // @@protoc_insertion_point(destructor:google.protobuf.NH_REQ_LOGIN)
  SharedDtor();
}

void NH_REQ_LOGIN::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validateinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NH_REQ_LOGIN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NH_REQ_LOGIN::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NH_REQ_LOGIN& NH_REQ_LOGIN::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

NH_REQ_LOGIN* NH_REQ_LOGIN::New(::google::protobuf::Arena* arena) const {
  NH_REQ_LOGIN* n = new NH_REQ_LOGIN;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NH_REQ_LOGIN::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.NH_REQ_LOGIN)
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validateinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = 0u;
}

bool NH_REQ_LOGIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.NH_REQ_LOGIN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.NH_REQ_LOGIN.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string validateinfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_validateinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->validateinfo().data(), this->validateinfo().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.NH_REQ_LOGIN.validateinfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.NH_REQ_LOGIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.NH_REQ_LOGIN)
  return false;
#undef DO_
}

void NH_REQ_LOGIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.NH_REQ_LOGIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.NH_REQ_LOGIN.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // string validateinfo = 3;
  if (this->validateinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validateinfo().data(), this->validateinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.NH_REQ_LOGIN.validateinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->validateinfo(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.protobuf.NH_REQ_LOGIN)
}

::google::protobuf::uint8* NH_REQ_LOGIN::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.NH_REQ_LOGIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.NH_REQ_LOGIN.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // string validateinfo = 3;
  if (this->validateinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validateinfo().data(), this->validateinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.NH_REQ_LOGIN.validateinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->validateinfo(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.NH_REQ_LOGIN)
  return target;
}

size_t NH_REQ_LOGIN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.NH_REQ_LOGIN)
  size_t total_size = 0;

  // string account = 2;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string validateinfo = 3;
  if (this->validateinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->validateinfo());
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NH_REQ_LOGIN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.NH_REQ_LOGIN)
  GOOGLE_DCHECK_NE(&from, this);
  const NH_REQ_LOGIN* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NH_REQ_LOGIN>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.NH_REQ_LOGIN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.NH_REQ_LOGIN)
    MergeFrom(*source);
  }
}

void NH_REQ_LOGIN::MergeFrom(const NH_REQ_LOGIN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.NH_REQ_LOGIN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.validateinfo().size() > 0) {

    validateinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validateinfo_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void NH_REQ_LOGIN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.NH_REQ_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NH_REQ_LOGIN::CopyFrom(const NH_REQ_LOGIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.NH_REQ_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NH_REQ_LOGIN::IsInitialized() const {
  return true;
}

void NH_REQ_LOGIN::Swap(NH_REQ_LOGIN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NH_REQ_LOGIN::InternalSwap(NH_REQ_LOGIN* other) {
  account_.Swap(&other->account_);
  validateinfo_.Swap(&other->validateinfo_);
  std::swap(uid_, other->uid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NH_REQ_LOGIN::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NH_REQ_LOGIN

// uint32 uid = 1;
void NH_REQ_LOGIN::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 NH_REQ_LOGIN::uid() const {
  // @@protoc_insertion_point(field_get:google.protobuf.NH_REQ_LOGIN.uid)
  return uid_;
}
void NH_REQ_LOGIN::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.NH_REQ_LOGIN.uid)
}

// string account = 2;
void NH_REQ_LOGIN::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NH_REQ_LOGIN::account() const {
  // @@protoc_insertion_point(field_get:google.protobuf.NH_REQ_LOGIN.account)
  return account_.GetNoArena();
}
void NH_REQ_LOGIN::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.NH_REQ_LOGIN.account)
}
#if LANG_CXX11
void NH_REQ_LOGIN::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.NH_REQ_LOGIN.account)
}
#endif
void NH_REQ_LOGIN::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.NH_REQ_LOGIN.account)
}
void NH_REQ_LOGIN::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.NH_REQ_LOGIN.account)
}
::std::string* NH_REQ_LOGIN::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.NH_REQ_LOGIN.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NH_REQ_LOGIN::release_account() {
  // @@protoc_insertion_point(field_release:google.protobuf.NH_REQ_LOGIN.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NH_REQ_LOGIN::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.NH_REQ_LOGIN.account)
}

// string validateinfo = 3;
void NH_REQ_LOGIN::clear_validateinfo() {
  validateinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NH_REQ_LOGIN::validateinfo() const {
  // @@protoc_insertion_point(field_get:google.protobuf.NH_REQ_LOGIN.validateinfo)
  return validateinfo_.GetNoArena();
}
void NH_REQ_LOGIN::set_validateinfo(const ::std::string& value) {
  
  validateinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.NH_REQ_LOGIN.validateinfo)
}
#if LANG_CXX11
void NH_REQ_LOGIN::set_validateinfo(::std::string&& value) {
  
  validateinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.NH_REQ_LOGIN.validateinfo)
}
#endif
void NH_REQ_LOGIN::set_validateinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  validateinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.NH_REQ_LOGIN.validateinfo)
}
void NH_REQ_LOGIN::set_validateinfo(const char* value, size_t size) {
  
  validateinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.NH_REQ_LOGIN.validateinfo)
}
::std::string* NH_REQ_LOGIN::mutable_validateinfo() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.NH_REQ_LOGIN.validateinfo)
  return validateinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NH_REQ_LOGIN::release_validateinfo() {
  // @@protoc_insertion_point(field_release:google.protobuf.NH_REQ_LOGIN.validateinfo)
  
  return validateinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NH_REQ_LOGIN::set_allocated_validateinfo(::std::string* validateinfo) {
  if (validateinfo != NULL) {
    
  } else {
    
  }
  validateinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), validateinfo);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.NH_REQ_LOGIN.validateinfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HN_RET_LOGIN::kUidFieldNumber;
const int HN_RET_LOGIN::kAccountFieldNumber;
const int HN_RET_LOGIN::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HN_RET_LOGIN::HN_RET_LOGIN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.HN_RET_LOGIN)
}
HN_RET_LOGIN::HN_RET_LOGIN(const HN_RET_LOGIN& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  ::memcpy(&uid_, &from.uid_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&uid_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:google.protobuf.HN_RET_LOGIN)
}

void HN_RET_LOGIN::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&uid_) + sizeof(result_));
  _cached_size_ = 0;
}

HN_RET_LOGIN::~HN_RET_LOGIN() {
  // @@protoc_insertion_point(destructor:google.protobuf.HN_RET_LOGIN)
  SharedDtor();
}

void HN_RET_LOGIN::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HN_RET_LOGIN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HN_RET_LOGIN::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HN_RET_LOGIN& HN_RET_LOGIN::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

HN_RET_LOGIN* HN_RET_LOGIN::New(::google::protobuf::Arena* arena) const {
  HN_RET_LOGIN* n = new HN_RET_LOGIN;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HN_RET_LOGIN::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.HN_RET_LOGIN)
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&uid_) + sizeof(result_));
}

bool HN_RET_LOGIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.HN_RET_LOGIN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.HN_RET_LOGIN.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.HN_RET_LOGIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.HN_RET_LOGIN)
  return false;
#undef DO_
}

void HN_RET_LOGIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.HN_RET_LOGIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.HN_RET_LOGIN.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // int32 result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.protobuf.HN_RET_LOGIN)
}

::google::protobuf::uint8* HN_RET_LOGIN::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.HN_RET_LOGIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.HN_RET_LOGIN.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // int32 result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.HN_RET_LOGIN)
  return target;
}

size_t HN_RET_LOGIN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.HN_RET_LOGIN)
  size_t total_size = 0;

  // string account = 2;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // int32 result = 3;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HN_RET_LOGIN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.HN_RET_LOGIN)
  GOOGLE_DCHECK_NE(&from, this);
  const HN_RET_LOGIN* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HN_RET_LOGIN>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.HN_RET_LOGIN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.HN_RET_LOGIN)
    MergeFrom(*source);
  }
}

void HN_RET_LOGIN::MergeFrom(const HN_RET_LOGIN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.HN_RET_LOGIN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void HN_RET_LOGIN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.HN_RET_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HN_RET_LOGIN::CopyFrom(const HN_RET_LOGIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.HN_RET_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HN_RET_LOGIN::IsInitialized() const {
  return true;
}

void HN_RET_LOGIN::Swap(HN_RET_LOGIN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HN_RET_LOGIN::InternalSwap(HN_RET_LOGIN* other) {
  account_.Swap(&other->account_);
  std::swap(uid_, other->uid_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HN_RET_LOGIN::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HN_RET_LOGIN

// uint32 uid = 1;
void HN_RET_LOGIN::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 HN_RET_LOGIN::uid() const {
  // @@protoc_insertion_point(field_get:google.protobuf.HN_RET_LOGIN.uid)
  return uid_;
}
void HN_RET_LOGIN::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.HN_RET_LOGIN.uid)
}

// string account = 2;
void HN_RET_LOGIN::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HN_RET_LOGIN::account() const {
  // @@protoc_insertion_point(field_get:google.protobuf.HN_RET_LOGIN.account)
  return account_.GetNoArena();
}
void HN_RET_LOGIN::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.HN_RET_LOGIN.account)
}
#if LANG_CXX11
void HN_RET_LOGIN::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.HN_RET_LOGIN.account)
}
#endif
void HN_RET_LOGIN::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.HN_RET_LOGIN.account)
}
void HN_RET_LOGIN::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.HN_RET_LOGIN.account)
}
::std::string* HN_RET_LOGIN::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.HN_RET_LOGIN.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HN_RET_LOGIN::release_account() {
  // @@protoc_insertion_point(field_release:google.protobuf.HN_RET_LOGIN.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HN_RET_LOGIN::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.HN_RET_LOGIN.account)
}

// int32 result = 3;
void HN_RET_LOGIN::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 HN_RET_LOGIN::result() const {
  // @@protoc_insertion_point(field_get:google.protobuf.HN_RET_LOGIN.result)
  return result_;
}
void HN_RET_LOGIN::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.HN_RET_LOGIN.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
