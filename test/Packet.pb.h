// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Packet.proto

#ifndef PROTOBUF_Packet_2eproto__INCLUDED
#define PROTOBUF_Packet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace protobuf {
class CG_LOGIN;
class CG_LOGINDefaultTypeInternal;
extern CG_LOGINDefaultTypeInternal _CG_LOGIN_default_instance_;
class GC_LOGIN;
class GC_LOGINDefaultTypeInternal;
extern GC_LOGINDefaultTypeInternal _GC_LOGIN_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace google {
namespace protobuf {

namespace protobuf_Packet_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Packet_2eproto

enum CG_LOGIN_VALIDATETYPE {
  CG_LOGIN_VALIDATETYPE_TEST = 0,
  CG_LOGIN_VALIDATETYPE_CYOU = 1,
  CG_LOGIN_VALIDATETYPE_CG_LOGIN_VALIDATETYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CG_LOGIN_VALIDATETYPE_CG_LOGIN_VALIDATETYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CG_LOGIN_VALIDATETYPE_IsValid(int value);
const CG_LOGIN_VALIDATETYPE CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MIN = CG_LOGIN_VALIDATETYPE_TEST;
const CG_LOGIN_VALIDATETYPE CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MAX = CG_LOGIN_VALIDATETYPE_CYOU;
const int CG_LOGIN_VALIDATETYPE_VALIDATETYPE_ARRAYSIZE = CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* CG_LOGIN_VALIDATETYPE_descriptor();
inline const ::std::string& CG_LOGIN_VALIDATETYPE_Name(CG_LOGIN_VALIDATETYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    CG_LOGIN_VALIDATETYPE_descriptor(), value);
}
inline bool CG_LOGIN_VALIDATETYPE_Parse(
    const ::std::string& name, CG_LOGIN_VALIDATETYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CG_LOGIN_VALIDATETYPE>(
    CG_LOGIN_VALIDATETYPE_descriptor(), name, value);
}
// ===================================================================

class CG_LOGIN : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.protobuf.CG_LOGIN) */ {
 public:
  CG_LOGIN();
  virtual ~CG_LOGIN();

  CG_LOGIN(const CG_LOGIN& from);

  inline CG_LOGIN& operator=(const CG_LOGIN& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_LOGIN& default_instance();

  static inline const CG_LOGIN* internal_default_instance() {
    return reinterpret_cast<const CG_LOGIN*>(
               &_CG_LOGIN_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CG_LOGIN* other);

  // implements Message ----------------------------------------------

  inline CG_LOGIN* New() const PROTOBUF_FINAL { return New(NULL); }

  CG_LOGIN* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CG_LOGIN& from);
  void MergeFrom(const CG_LOGIN& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CG_LOGIN* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CG_LOGIN_VALIDATETYPE VALIDATETYPE;
  static const VALIDATETYPE TEST =
    CG_LOGIN_VALIDATETYPE_TEST;
  static const VALIDATETYPE CYOU =
    CG_LOGIN_VALIDATETYPE_CYOU;
  static inline bool VALIDATETYPE_IsValid(int value) {
    return CG_LOGIN_VALIDATETYPE_IsValid(value);
  }
  static const VALIDATETYPE VALIDATETYPE_MIN =
    CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MIN;
  static const VALIDATETYPE VALIDATETYPE_MAX =
    CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MAX;
  static const int VALIDATETYPE_ARRAYSIZE =
    CG_LOGIN_VALIDATETYPE_VALIDATETYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VALIDATETYPE_descriptor() {
    return CG_LOGIN_VALIDATETYPE_descriptor();
  }
  static inline const ::std::string& VALIDATETYPE_Name(VALIDATETYPE value) {
    return CG_LOGIN_VALIDATETYPE_Name(value);
  }
  static inline bool VALIDATETYPE_Parse(const ::std::string& name,
      VALIDATETYPE* value) {
    return CG_LOGIN_VALIDATETYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string deviceid = 7;
  void clear_deviceid();
  static const int kDeviceidFieldNumber = 7;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // string devicetype = 8;
  void clear_devicetype();
  static const int kDevicetypeFieldNumber = 8;
  const ::std::string& devicetype() const;
  void set_devicetype(const ::std::string& value);
  #if LANG_CXX11
  void set_devicetype(::std::string&& value);
  #endif
  void set_devicetype(const char* value);
  void set_devicetype(const char* value, size_t size);
  ::std::string* mutable_devicetype();
  ::std::string* release_devicetype();
  void set_allocated_devicetype(::std::string* devicetype);

  // string deviceversion = 9;
  void clear_deviceversion();
  static const int kDeviceversionFieldNumber = 9;
  const ::std::string& deviceversion() const;
  void set_deviceversion(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceversion(::std::string&& value);
  #endif
  void set_deviceversion(const char* value);
  void set_deviceversion(const char* value, size_t size);
  ::std::string* mutable_deviceversion();
  ::std::string* release_deviceversion();
  void set_allocated_deviceversion(::std::string* deviceversion);

  // string account = 10;
  void clear_account();
  static const int kAccountFieldNumber = 10;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string validateinfo = 11;
  void clear_validateinfo();
  static const int kValidateinfoFieldNumber = 11;
  const ::std::string& validateinfo() const;
  void set_validateinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_validateinfo(::std::string&& value);
  #endif
  void set_validateinfo(const char* value);
  void set_validateinfo(const char* value, size_t size);
  ::std::string* mutable_validateinfo();
  ::std::string* release_validateinfo();
  void set_allocated_validateinfo(::std::string* validateinfo);

  // string channelid = 12;
  void clear_channelid();
  static const int kChannelidFieldNumber = 12;
  const ::std::string& channelid() const;
  void set_channelid(const ::std::string& value);
  #if LANG_CXX11
  void set_channelid(::std::string&& value);
  #endif
  void set_channelid(const char* value);
  void set_channelid(const char* value, size_t size);
  ::std::string* mutable_channelid();
  ::std::string* release_channelid();
  void set_allocated_channelid(::std::string* channelid);

  // string mediachannel = 13;
  void clear_mediachannel();
  static const int kMediachannelFieldNumber = 13;
  const ::std::string& mediachannel() const;
  void set_mediachannel(const ::std::string& value);
  #if LANG_CXX11
  void set_mediachannel(::std::string&& value);
  #endif
  void set_mediachannel(const char* value);
  void set_mediachannel(const char* value, size_t size);
  ::std::string* mutable_mediachannel();
  ::std::string* release_mediachannel();
  void set_allocated_mediachannel(::std::string* mediachannel);

  // string reservedstring1 = 19;
  void clear_reservedstring1();
  static const int kReservedstring1FieldNumber = 19;
  const ::std::string& reservedstring1() const;
  void set_reservedstring1(const ::std::string& value);
  #if LANG_CXX11
  void set_reservedstring1(::std::string&& value);
  #endif
  void set_reservedstring1(const char* value);
  void set_reservedstring1(const char* value, size_t size);
  ::std::string* mutable_reservedstring1();
  ::std::string* release_reservedstring1();
  void set_allocated_reservedstring1(::std::string* reservedstring1);

  // string reservedstring2 = 20;
  void clear_reservedstring2();
  static const int kReservedstring2FieldNumber = 20;
  const ::std::string& reservedstring2() const;
  void set_reservedstring2(const ::std::string& value);
  #if LANG_CXX11
  void set_reservedstring2(::std::string&& value);
  #endif
  void set_reservedstring2(const char* value);
  void set_reservedstring2(const char* value, size_t size);
  ::std::string* mutable_reservedstring2();
  ::std::string* release_reservedstring2();
  void set_allocated_reservedstring2(::std::string* reservedstring2);

  // string reservedstring3 = 21;
  void clear_reservedstring3();
  static const int kReservedstring3FieldNumber = 21;
  const ::std::string& reservedstring3() const;
  void set_reservedstring3(const ::std::string& value);
  #if LANG_CXX11
  void set_reservedstring3(::std::string&& value);
  #endif
  void set_reservedstring3(const char* value);
  void set_reservedstring3(const char* value, size_t size);
  ::std::string* mutable_reservedstring3();
  ::std::string* release_reservedstring3();
  void set_allocated_reservedstring3(::std::string* reservedstring3);

  // string reservedstring4 = 22;
  void clear_reservedstring4();
  static const int kReservedstring4FieldNumber = 22;
  const ::std::string& reservedstring4() const;
  void set_reservedstring4(const ::std::string& value);
  #if LANG_CXX11
  void set_reservedstring4(::std::string&& value);
  #endif
  void set_reservedstring4(const char* value);
  void set_reservedstring4(const char* value, size_t size);
  ::std::string* mutable_reservedstring4();
  ::std::string* release_reservedstring4();
  void set_allocated_reservedstring4(::std::string* reservedstring4);

  // int32 vtype = 1;
  void clear_vtype();
  static const int kVtypeFieldNumber = 1;
  ::google::protobuf::int32 vtype() const;
  void set_vtype(::google::protobuf::int32 value);

  // int32 gameversion = 2;
  void clear_gameversion();
  static const int kGameversionFieldNumber = 2;
  ::google::protobuf::int32 gameversion() const;
  void set_gameversion(::google::protobuf::int32 value);

  // int32 programversion = 3;
  void clear_programversion();
  static const int kProgramversionFieldNumber = 3;
  ::google::protobuf::int32 programversion() const;
  void set_programversion(::google::protobuf::int32 value);

  // int32 publicresourceversion = 4;
  void clear_publicresourceversion();
  static const int kPublicresourceversionFieldNumber = 4;
  ::google::protobuf::int32 publicresourceversion() const;
  void set_publicresourceversion(::google::protobuf::int32 value);

  // int32 maxpacketid = 5;
  void clear_maxpacketid();
  static const int kMaxpacketidFieldNumber = 5;
  ::google::protobuf::int32 maxpacketid() const;
  void set_maxpacketid(::google::protobuf::int32 value);

  // int32 forceenter = 6;
  void clear_forceenter();
  static const int kForceenterFieldNumber = 6;
  ::google::protobuf::int32 forceenter() const;
  void set_forceenter(::google::protobuf::int32 value);

  // int32 rapidvalidatecode = 14;
  void clear_rapidvalidatecode();
  static const int kRapidvalidatecodeFieldNumber = 14;
  ::google::protobuf::int32 rapidvalidatecode() const;
  void set_rapidvalidatecode(::google::protobuf::int32 value);

  // int32 reservedint1 = 15;
  void clear_reservedint1();
  static const int kReservedint1FieldNumber = 15;
  ::google::protobuf::int32 reservedint1() const;
  void set_reservedint1(::google::protobuf::int32 value);

  // int32 reservedint2 = 16;
  void clear_reservedint2();
  static const int kReservedint2FieldNumber = 16;
  ::google::protobuf::int32 reservedint2() const;
  void set_reservedint2(::google::protobuf::int32 value);

  // int32 reservedint3 = 17;
  void clear_reservedint3();
  static const int kReservedint3FieldNumber = 17;
  ::google::protobuf::int32 reservedint3() const;
  void set_reservedint3(::google::protobuf::int32 value);

  // int32 reservedint4 = 18;
  void clear_reservedint4();
  static const int kReservedint4FieldNumber = 18;
  ::google::protobuf::int32 reservedint4() const;
  void set_reservedint4(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.protobuf.CG_LOGIN)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr devicetype_;
  ::google::protobuf::internal::ArenaStringPtr deviceversion_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr validateinfo_;
  ::google::protobuf::internal::ArenaStringPtr channelid_;
  ::google::protobuf::internal::ArenaStringPtr mediachannel_;
  ::google::protobuf::internal::ArenaStringPtr reservedstring1_;
  ::google::protobuf::internal::ArenaStringPtr reservedstring2_;
  ::google::protobuf::internal::ArenaStringPtr reservedstring3_;
  ::google::protobuf::internal::ArenaStringPtr reservedstring4_;
  ::google::protobuf::int32 vtype_;
  ::google::protobuf::int32 gameversion_;
  ::google::protobuf::int32 programversion_;
  ::google::protobuf::int32 publicresourceversion_;
  ::google::protobuf::int32 maxpacketid_;
  ::google::protobuf::int32 forceenter_;
  ::google::protobuf::int32 rapidvalidatecode_;
  ::google::protobuf::int32 reservedint1_;
  ::google::protobuf::int32 reservedint2_;
  ::google::protobuf::int32 reservedint3_;
  ::google::protobuf::int32 reservedint4_;
  mutable int _cached_size_;
  friend struct protobuf_Packet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GC_LOGIN : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.protobuf.GC_LOGIN) */ {
 public:
  GC_LOGIN();
  virtual ~GC_LOGIN();

  GC_LOGIN(const GC_LOGIN& from);

  inline GC_LOGIN& operator=(const GC_LOGIN& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_LOGIN& default_instance();

  static inline const GC_LOGIN* internal_default_instance() {
    return reinterpret_cast<const GC_LOGIN*>(
               &_GC_LOGIN_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GC_LOGIN* other);

  // implements Message ----------------------------------------------

  inline GC_LOGIN* New() const PROTOBUF_FINAL { return New(NULL); }

  GC_LOGIN* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GC_LOGIN& from);
  void MergeFrom(const GC_LOGIN& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GC_LOGIN* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.protobuf.GC_LOGIN)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct protobuf_Packet_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CG_LOGIN

// int32 vtype = 1;
inline void CG_LOGIN::clear_vtype() {
  vtype_ = 0;
}
inline ::google::protobuf::int32 CG_LOGIN::vtype() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.vtype)
  return vtype_;
}
inline void CG_LOGIN::set_vtype(::google::protobuf::int32 value) {
  
  vtype_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.vtype)
}

// int32 gameversion = 2;
inline void CG_LOGIN::clear_gameversion() {
  gameversion_ = 0;
}
inline ::google::protobuf::int32 CG_LOGIN::gameversion() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.gameversion)
  return gameversion_;
}
inline void CG_LOGIN::set_gameversion(::google::protobuf::int32 value) {
  
  gameversion_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.gameversion)
}

// int32 programversion = 3;
inline void CG_LOGIN::clear_programversion() {
  programversion_ = 0;
}
inline ::google::protobuf::int32 CG_LOGIN::programversion() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.programversion)
  return programversion_;
}
inline void CG_LOGIN::set_programversion(::google::protobuf::int32 value) {
  
  programversion_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.programversion)
}

// int32 publicresourceversion = 4;
inline void CG_LOGIN::clear_publicresourceversion() {
  publicresourceversion_ = 0;
}
inline ::google::protobuf::int32 CG_LOGIN::publicresourceversion() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.publicresourceversion)
  return publicresourceversion_;
}
inline void CG_LOGIN::set_publicresourceversion(::google::protobuf::int32 value) {
  
  publicresourceversion_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.publicresourceversion)
}

// int32 maxpacketid = 5;
inline void CG_LOGIN::clear_maxpacketid() {
  maxpacketid_ = 0;
}
inline ::google::protobuf::int32 CG_LOGIN::maxpacketid() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.maxpacketid)
  return maxpacketid_;
}
inline void CG_LOGIN::set_maxpacketid(::google::protobuf::int32 value) {
  
  maxpacketid_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.maxpacketid)
}

// int32 forceenter = 6;
inline void CG_LOGIN::clear_forceenter() {
  forceenter_ = 0;
}
inline ::google::protobuf::int32 CG_LOGIN::forceenter() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.forceenter)
  return forceenter_;
}
inline void CG_LOGIN::set_forceenter(::google::protobuf::int32 value) {
  
  forceenter_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.forceenter)
}

// string deviceid = 7;
inline void CG_LOGIN::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CG_LOGIN::deviceid() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.deviceid)
  return deviceid_.GetNoArena();
}
inline void CG_LOGIN::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.deviceid)
}
#if LANG_CXX11
inline void CG_LOGIN::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.CG_LOGIN.deviceid)
}
#endif
inline void CG_LOGIN::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.CG_LOGIN.deviceid)
}
inline void CG_LOGIN::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.CG_LOGIN.deviceid)
}
inline ::std::string* CG_LOGIN::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.CG_LOGIN.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CG_LOGIN::release_deviceid() {
  // @@protoc_insertion_point(field_release:google.protobuf.CG_LOGIN.deviceid)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CG_LOGIN::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.CG_LOGIN.deviceid)
}

// string devicetype = 8;
inline void CG_LOGIN::clear_devicetype() {
  devicetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CG_LOGIN::devicetype() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.devicetype)
  return devicetype_.GetNoArena();
}
inline void CG_LOGIN::set_devicetype(const ::std::string& value) {
  
  devicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.devicetype)
}
#if LANG_CXX11
inline void CG_LOGIN::set_devicetype(::std::string&& value) {
  
  devicetype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.CG_LOGIN.devicetype)
}
#endif
inline void CG_LOGIN::set_devicetype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  devicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.CG_LOGIN.devicetype)
}
inline void CG_LOGIN::set_devicetype(const char* value, size_t size) {
  
  devicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.CG_LOGIN.devicetype)
}
inline ::std::string* CG_LOGIN::mutable_devicetype() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.CG_LOGIN.devicetype)
  return devicetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CG_LOGIN::release_devicetype() {
  // @@protoc_insertion_point(field_release:google.protobuf.CG_LOGIN.devicetype)
  
  return devicetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CG_LOGIN::set_allocated_devicetype(::std::string* devicetype) {
  if (devicetype != NULL) {
    
  } else {
    
  }
  devicetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicetype);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.CG_LOGIN.devicetype)
}

// string deviceversion = 9;
inline void CG_LOGIN::clear_deviceversion() {
  deviceversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CG_LOGIN::deviceversion() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.deviceversion)
  return deviceversion_.GetNoArena();
}
inline void CG_LOGIN::set_deviceversion(const ::std::string& value) {
  
  deviceversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.deviceversion)
}
#if LANG_CXX11
inline void CG_LOGIN::set_deviceversion(::std::string&& value) {
  
  deviceversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.CG_LOGIN.deviceversion)
}
#endif
inline void CG_LOGIN::set_deviceversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deviceversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.CG_LOGIN.deviceversion)
}
inline void CG_LOGIN::set_deviceversion(const char* value, size_t size) {
  
  deviceversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.CG_LOGIN.deviceversion)
}
inline ::std::string* CG_LOGIN::mutable_deviceversion() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.CG_LOGIN.deviceversion)
  return deviceversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CG_LOGIN::release_deviceversion() {
  // @@protoc_insertion_point(field_release:google.protobuf.CG_LOGIN.deviceversion)
  
  return deviceversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CG_LOGIN::set_allocated_deviceversion(::std::string* deviceversion) {
  if (deviceversion != NULL) {
    
  } else {
    
  }
  deviceversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceversion);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.CG_LOGIN.deviceversion)
}

// string account = 10;
inline void CG_LOGIN::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CG_LOGIN::account() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.account)
  return account_.GetNoArena();
}
inline void CG_LOGIN::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.account)
}
#if LANG_CXX11
inline void CG_LOGIN::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.CG_LOGIN.account)
}
#endif
inline void CG_LOGIN::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.CG_LOGIN.account)
}
inline void CG_LOGIN::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.CG_LOGIN.account)
}
inline ::std::string* CG_LOGIN::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.CG_LOGIN.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CG_LOGIN::release_account() {
  // @@protoc_insertion_point(field_release:google.protobuf.CG_LOGIN.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CG_LOGIN::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.CG_LOGIN.account)
}

// string validateinfo = 11;
inline void CG_LOGIN::clear_validateinfo() {
  validateinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CG_LOGIN::validateinfo() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.validateinfo)
  return validateinfo_.GetNoArena();
}
inline void CG_LOGIN::set_validateinfo(const ::std::string& value) {
  
  validateinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.validateinfo)
}
#if LANG_CXX11
inline void CG_LOGIN::set_validateinfo(::std::string&& value) {
  
  validateinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.CG_LOGIN.validateinfo)
}
#endif
inline void CG_LOGIN::set_validateinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  validateinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.CG_LOGIN.validateinfo)
}
inline void CG_LOGIN::set_validateinfo(const char* value, size_t size) {
  
  validateinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.CG_LOGIN.validateinfo)
}
inline ::std::string* CG_LOGIN::mutable_validateinfo() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.CG_LOGIN.validateinfo)
  return validateinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CG_LOGIN::release_validateinfo() {
  // @@protoc_insertion_point(field_release:google.protobuf.CG_LOGIN.validateinfo)
  
  return validateinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CG_LOGIN::set_allocated_validateinfo(::std::string* validateinfo) {
  if (validateinfo != NULL) {
    
  } else {
    
  }
  validateinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), validateinfo);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.CG_LOGIN.validateinfo)
}

// string channelid = 12;
inline void CG_LOGIN::clear_channelid() {
  channelid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CG_LOGIN::channelid() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.channelid)
  return channelid_.GetNoArena();
}
inline void CG_LOGIN::set_channelid(const ::std::string& value) {
  
  channelid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.channelid)
}
#if LANG_CXX11
inline void CG_LOGIN::set_channelid(::std::string&& value) {
  
  channelid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.CG_LOGIN.channelid)
}
#endif
inline void CG_LOGIN::set_channelid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channelid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.CG_LOGIN.channelid)
}
inline void CG_LOGIN::set_channelid(const char* value, size_t size) {
  
  channelid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.CG_LOGIN.channelid)
}
inline ::std::string* CG_LOGIN::mutable_channelid() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.CG_LOGIN.channelid)
  return channelid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CG_LOGIN::release_channelid() {
  // @@protoc_insertion_point(field_release:google.protobuf.CG_LOGIN.channelid)
  
  return channelid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CG_LOGIN::set_allocated_channelid(::std::string* channelid) {
  if (channelid != NULL) {
    
  } else {
    
  }
  channelid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channelid);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.CG_LOGIN.channelid)
}

// string mediachannel = 13;
inline void CG_LOGIN::clear_mediachannel() {
  mediachannel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CG_LOGIN::mediachannel() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.mediachannel)
  return mediachannel_.GetNoArena();
}
inline void CG_LOGIN::set_mediachannel(const ::std::string& value) {
  
  mediachannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.mediachannel)
}
#if LANG_CXX11
inline void CG_LOGIN::set_mediachannel(::std::string&& value) {
  
  mediachannel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.CG_LOGIN.mediachannel)
}
#endif
inline void CG_LOGIN::set_mediachannel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mediachannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.CG_LOGIN.mediachannel)
}
inline void CG_LOGIN::set_mediachannel(const char* value, size_t size) {
  
  mediachannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.CG_LOGIN.mediachannel)
}
inline ::std::string* CG_LOGIN::mutable_mediachannel() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.CG_LOGIN.mediachannel)
  return mediachannel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CG_LOGIN::release_mediachannel() {
  // @@protoc_insertion_point(field_release:google.protobuf.CG_LOGIN.mediachannel)
  
  return mediachannel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CG_LOGIN::set_allocated_mediachannel(::std::string* mediachannel) {
  if (mediachannel != NULL) {
    
  } else {
    
  }
  mediachannel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mediachannel);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.CG_LOGIN.mediachannel)
}

// int32 rapidvalidatecode = 14;
inline void CG_LOGIN::clear_rapidvalidatecode() {
  rapidvalidatecode_ = 0;
}
inline ::google::protobuf::int32 CG_LOGIN::rapidvalidatecode() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.rapidvalidatecode)
  return rapidvalidatecode_;
}
inline void CG_LOGIN::set_rapidvalidatecode(::google::protobuf::int32 value) {
  
  rapidvalidatecode_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.rapidvalidatecode)
}

// int32 reservedint1 = 15;
inline void CG_LOGIN::clear_reservedint1() {
  reservedint1_ = 0;
}
inline ::google::protobuf::int32 CG_LOGIN::reservedint1() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.reservedint1)
  return reservedint1_;
}
inline void CG_LOGIN::set_reservedint1(::google::protobuf::int32 value) {
  
  reservedint1_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.reservedint1)
}

// int32 reservedint2 = 16;
inline void CG_LOGIN::clear_reservedint2() {
  reservedint2_ = 0;
}
inline ::google::protobuf::int32 CG_LOGIN::reservedint2() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.reservedint2)
  return reservedint2_;
}
inline void CG_LOGIN::set_reservedint2(::google::protobuf::int32 value) {
  
  reservedint2_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.reservedint2)
}

// int32 reservedint3 = 17;
inline void CG_LOGIN::clear_reservedint3() {
  reservedint3_ = 0;
}
inline ::google::protobuf::int32 CG_LOGIN::reservedint3() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.reservedint3)
  return reservedint3_;
}
inline void CG_LOGIN::set_reservedint3(::google::protobuf::int32 value) {
  
  reservedint3_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.reservedint3)
}

// int32 reservedint4 = 18;
inline void CG_LOGIN::clear_reservedint4() {
  reservedint4_ = 0;
}
inline ::google::protobuf::int32 CG_LOGIN::reservedint4() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.reservedint4)
  return reservedint4_;
}
inline void CG_LOGIN::set_reservedint4(::google::protobuf::int32 value) {
  
  reservedint4_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.reservedint4)
}

// string reservedstring1 = 19;
inline void CG_LOGIN::clear_reservedstring1() {
  reservedstring1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CG_LOGIN::reservedstring1() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.reservedstring1)
  return reservedstring1_.GetNoArena();
}
inline void CG_LOGIN::set_reservedstring1(const ::std::string& value) {
  
  reservedstring1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.reservedstring1)
}
#if LANG_CXX11
inline void CG_LOGIN::set_reservedstring1(::std::string&& value) {
  
  reservedstring1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.CG_LOGIN.reservedstring1)
}
#endif
inline void CG_LOGIN::set_reservedstring1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reservedstring1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.CG_LOGIN.reservedstring1)
}
inline void CG_LOGIN::set_reservedstring1(const char* value, size_t size) {
  
  reservedstring1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.CG_LOGIN.reservedstring1)
}
inline ::std::string* CG_LOGIN::mutable_reservedstring1() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.CG_LOGIN.reservedstring1)
  return reservedstring1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CG_LOGIN::release_reservedstring1() {
  // @@protoc_insertion_point(field_release:google.protobuf.CG_LOGIN.reservedstring1)
  
  return reservedstring1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CG_LOGIN::set_allocated_reservedstring1(::std::string* reservedstring1) {
  if (reservedstring1 != NULL) {
    
  } else {
    
  }
  reservedstring1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reservedstring1);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.CG_LOGIN.reservedstring1)
}

// string reservedstring2 = 20;
inline void CG_LOGIN::clear_reservedstring2() {
  reservedstring2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CG_LOGIN::reservedstring2() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.reservedstring2)
  return reservedstring2_.GetNoArena();
}
inline void CG_LOGIN::set_reservedstring2(const ::std::string& value) {
  
  reservedstring2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.reservedstring2)
}
#if LANG_CXX11
inline void CG_LOGIN::set_reservedstring2(::std::string&& value) {
  
  reservedstring2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.CG_LOGIN.reservedstring2)
}
#endif
inline void CG_LOGIN::set_reservedstring2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reservedstring2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.CG_LOGIN.reservedstring2)
}
inline void CG_LOGIN::set_reservedstring2(const char* value, size_t size) {
  
  reservedstring2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.CG_LOGIN.reservedstring2)
}
inline ::std::string* CG_LOGIN::mutable_reservedstring2() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.CG_LOGIN.reservedstring2)
  return reservedstring2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CG_LOGIN::release_reservedstring2() {
  // @@protoc_insertion_point(field_release:google.protobuf.CG_LOGIN.reservedstring2)
  
  return reservedstring2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CG_LOGIN::set_allocated_reservedstring2(::std::string* reservedstring2) {
  if (reservedstring2 != NULL) {
    
  } else {
    
  }
  reservedstring2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reservedstring2);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.CG_LOGIN.reservedstring2)
}

// string reservedstring3 = 21;
inline void CG_LOGIN::clear_reservedstring3() {
  reservedstring3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CG_LOGIN::reservedstring3() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.reservedstring3)
  return reservedstring3_.GetNoArena();
}
inline void CG_LOGIN::set_reservedstring3(const ::std::string& value) {
  
  reservedstring3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.reservedstring3)
}
#if LANG_CXX11
inline void CG_LOGIN::set_reservedstring3(::std::string&& value) {
  
  reservedstring3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.CG_LOGIN.reservedstring3)
}
#endif
inline void CG_LOGIN::set_reservedstring3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reservedstring3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.CG_LOGIN.reservedstring3)
}
inline void CG_LOGIN::set_reservedstring3(const char* value, size_t size) {
  
  reservedstring3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.CG_LOGIN.reservedstring3)
}
inline ::std::string* CG_LOGIN::mutable_reservedstring3() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.CG_LOGIN.reservedstring3)
  return reservedstring3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CG_LOGIN::release_reservedstring3() {
  // @@protoc_insertion_point(field_release:google.protobuf.CG_LOGIN.reservedstring3)
  
  return reservedstring3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CG_LOGIN::set_allocated_reservedstring3(::std::string* reservedstring3) {
  if (reservedstring3 != NULL) {
    
  } else {
    
  }
  reservedstring3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reservedstring3);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.CG_LOGIN.reservedstring3)
}

// string reservedstring4 = 22;
inline void CG_LOGIN::clear_reservedstring4() {
  reservedstring4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CG_LOGIN::reservedstring4() const {
  // @@protoc_insertion_point(field_get:google.protobuf.CG_LOGIN.reservedstring4)
  return reservedstring4_.GetNoArena();
}
inline void CG_LOGIN::set_reservedstring4(const ::std::string& value) {
  
  reservedstring4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.CG_LOGIN.reservedstring4)
}
#if LANG_CXX11
inline void CG_LOGIN::set_reservedstring4(::std::string&& value) {
  
  reservedstring4_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.CG_LOGIN.reservedstring4)
}
#endif
inline void CG_LOGIN::set_reservedstring4(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reservedstring4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.CG_LOGIN.reservedstring4)
}
inline void CG_LOGIN::set_reservedstring4(const char* value, size_t size) {
  
  reservedstring4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.CG_LOGIN.reservedstring4)
}
inline ::std::string* CG_LOGIN::mutable_reservedstring4() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.CG_LOGIN.reservedstring4)
  return reservedstring4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CG_LOGIN::release_reservedstring4() {
  // @@protoc_insertion_point(field_release:google.protobuf.CG_LOGIN.reservedstring4)
  
  return reservedstring4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CG_LOGIN::set_allocated_reservedstring4(::std::string* reservedstring4) {
  if (reservedstring4 != NULL) {
    
  } else {
    
  }
  reservedstring4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reservedstring4);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.CG_LOGIN.reservedstring4)
}

// -------------------------------------------------------------------

// GC_LOGIN

// int32 result = 1;
inline void GC_LOGIN::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 GC_LOGIN::result() const {
  // @@protoc_insertion_point(field_get:google.protobuf.GC_LOGIN.result)
  return result_;
}
inline void GC_LOGIN::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.GC_LOGIN.result)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protobuf
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::protobuf::CG_LOGIN_VALIDATETYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::protobuf::CG_LOGIN_VALIDATETYPE>() {
  return ::google::protobuf::CG_LOGIN_VALIDATETYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Packet_2eproto__INCLUDED
